#进阶3：排序查询 /* 引入: select * from employees 语法: select 查询列表 from 表 【where 筛选条件】 order by 排序列表 【asc|desc】

特点： 1、asc代表的是圣墟，desc 代表的是降序 如果不写，默认是圣墟 2、order by 子句中可以支持单个字段、多个字段、表达式、函数、别名 3、order by 子句一般是放在查询语句的最后面，limit子句除外 */

#案例1:查询员工信息，要求工资从高到底排序 SELECT * FROM employees ORDER BY salary DESC; SELECT * FROM employees ORDER BY salary ASC;

#案例2:查询部门编号>=90 的员工信息，按入职时间的先后进行排序 SELECT * FROM employees WHERE department_id>=90 ORDER BY hiredate ASC;

#案例3：按年薪的高低显示员工的信息和年薪【按表达式/别名排序】 SELECT ,salary12*(1+IFNULL(commission_pct,0))年薪 FROM employees ORDER BY salary12(1+IFNULL(commission_pct,0)) DESC; SELECT ,salary12*(1+IFNULL(commission_pct,0))年薪 FROM employees ORDER BY 年薪 DESC;

#案例5：按姓名的长度显示员工的姓名和工资【按函数排序】 SELECT LENGTH (lsat_name) 字节长度，last_name,salary FROM employees ORDER BY lengt(last_name) DESC;

#案例6：查询员工信息，要求先按工资排序，再按员工编号排序【按多个字段排序】 SELECT * FROM employees ORDER BY salary ASC,employees_id DESC;

#查询员工的姓名和部门号,年薪，按年薪降序，按姓名升序 

SELECT last_name,department_id,salary12(1+IFNULL(commission_pct,0)) 年薪 FROM employees ORDER BY 年薪 DESC,last_name ASC; 

#选择工资不在 8000 到 17000 的员工的姓名和工资，按工资降序 SELECT last_name,salary FROM employees WHERE salary NOT BETWEEN 8000 AND 17000 ORDER BY salary ASC; 

#查询邮箱中包含 e 的员工信息，并先按邮箱的字节数降序，再按部门号升序 
SELECT *,LENGTH(email) FROM employees WHERE email LIKE '%e%' ORDER BY LENGTH(email)DESC,department_id ASC;
