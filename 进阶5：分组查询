#进阶5:分组查询

/*

语法:

	select 分组函数,列(要求出现在group by 的后面)

	from 表

	[where 筛选条件]

	group by 分组的列表

	[order by 子句]

注意:

	查询里诶博爱必须特殊,要求是分组函数和group by后面出现的字段

特点:

	1.分组查询中的筛选条件分为两类

				数据源				位置						关键字

	分组前筛选	原始表				group by 子句的前面		where

	分组后筛选	分组后的结果集		group by 子句的后面		having


		⑴分组函数(最高工资大于谁,最大个数是多少)做条件肯定是放在having子句中

		⑵能用分组前筛选的,就有限考虑使用分组前筛选
 2.group by子句支持单个字段分组,多个字段分组(多个字段之间用逗号隔开,没有顺序要求),表达式或函数(用的额较少)

	3.也可添加排序(排序放在整个分组

*/


#引入:查询每个部门的平均工资


SELECT AVG(salary) FROM employees;

简单的分组查询

#案例1:查询每个工种的最高工资

SELECT MAX(salary),job_id

FROM employees

GROUP BY job_id;

#案例2:查询每个位置上的部门个数

SELECT COUNT(*),location_id

FROM departments

GROUP BY location_id;

#添加分组<前>的筛选条件

#案例1:查询邮箱中包含a字符的,每个部门的平均工资

SELECT AVG(salary),department_id

FROM employees

WHERE email LIKE '%a%'

GROUP BY department_id;

#案例2:查询有奖金的每个领导手下员工的最高工资

SELECT MAX(salary),manager_id

FROM employees

WHERE commission_pct IS NOT NULL

GROUP BY manager_id;

#添加分组<后>筛选条件

#案例1:查询哪个部门的员工个数>2

#⑴查询每个部门的员工个数

SELECT COUNT(*),department_id

FROM employees

GROUP BY department_id;

#⑵根据⑴的结果进行筛选,查询哪个部门的员工个数>2

SELECT COUNT(*),department_id

FROM employees

GROUP BY department_id

HAVING COUNT(*)>2;

#案例2:查询每个工种有奖金的员工的最高工资>12000的工种编号和最高工资

#⑴查询每个工种有奖金的员工的最高工资

SELECT MAX(salary),job_id

FROM employees

WHERE commission_pct IS NOT NULL

GROUP BY job_id;

#⑵根据⑴结果继续筛选,最高工资>12000

SELECT MAX(salary),job_id

FROM employees

WHERE commission_pct IS NOT NULL

GROUP BY job_id

HAVING MAX(salary)>12000;

#案例3:查询领导编号>102的每个领导手下的最低工资>5000的领导编号是哪个,以及最低工资

#⑴查询领导编号>102的每个领导手下的员工固定最低工资

#⑵添加筛选条件:最低工资>5000(having)

SELECT MIN(salary),manager_id

FROM employees

WHERE manager_id>102

GROUP BY manager_id

HAVING MIN(salary)>5000;

#按表达式或函数分组

#案例:按员工姓名的长度分组,查询每一组的员工个数,筛选员工个数>5的有哪些

#⑴查询每个长度的员工个数

SELECT COUNT(*),LENGTH(last_name) len_name

FROM employees

GROUP BY LENGTH(last_name)

#⑵添加筛选条件

SELECT COUNT(*) c,LENGTH(last_name) len_name

FROM employees

GROUP BY len_name

HAVING c>5;

orcle 不支持group by和having 后面不支持别名

#按多个字段分组

#案例:查询每个部门每个工种的员工的平均工资

SELECT AVG(salary),department_id,job_id

FROM employees

GROUP BY department_id,job_id;

#添加排序

#案例:查询每个部门每个工种的员工的平均工资,并且按照平均工资高低显示

SELECT AVG(salary),department_id,job_id

FROM employees

WHERE department_id IS NOT NULL

GROUP BY department_id,job_id

HAVING AVG(salary)>10000

ORDER BY AVG(salary) DESC;

#1.查询个job_id的员工工资的最大值,最小值,平均值,总和,并按job_id排序

SELECT job_id,MAX(salary),MIN(salary),ROUND(AVG(salary),2),SUM(salary)

FROM employees

GROUP BY job_id

ORDER BY job_id;

#2.查询员工最高工资和最低工资的差距(difference)

SELECT MAX(salary)-MIN(salary) diffrence

FROM employees;

#3.查询各个管理者手下员工的最低工资,其中最低工资不能低于6000,没有管理者的员工,不计算在内

SELECT MIN(salary),manager_id

FROM employees

WHERE manager_id IS NOT NULL

GROUP BY manager_id

HAVING MIN(salary)>=6000;

#4.查询所有部门的编号,员工数量和工资平均值,并按平均工资降序

SELECT department_id,COUNT(*),ROUND(AVG(salary),2)

FROM employees

GROUP BY department_id

ORDER BY AVG(salary) DESC;

#5.选择具有各个job_id的员工人数

SELECT job_id,COUNT(*) 个数

FROM employees

GROUP BY job_id;
